{"version":3,"file":"index.esm.js","sources":["../src/timer.js","../src/domHelpers.js","../src/createListComponent.js","../src/ItemMeasurer.js","../src/DynamicSizeList.js","../src/createGridComponent.js","../src/FixedSizeGrid.js","../src/FixedSizeList.js","../src/VariableSizeGrid.js","../src/VariableSizeList.js","../src/shallowDiffers.js","../src/areEqual.js","../src/shouldComponentUpdate.js"],"sourcesContent":["// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\nexport type Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\nexport type Layout = 'horizontal' | 'vertical';\n\nexport type RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => ?number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nexport const defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n      this._commitHook();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n      this._commitHook();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._unmountHook();\n    }\n\n    render() {\n      const {\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const items = this._renderItems();\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            height,\n            width,\n            overflow: 'auto',\n            position: 'relative',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // This method is called after mount and update.\n    // List implementations can override this method to be notified.\n    _commitHook() {}\n\n    // This method is called before unmounting.\n    // List implementations can override this method to be notified.\n    _unmountHook() {}\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          [direction === 'rtl' ? 'right' : 'left']: isHorizontal ? offset : 0,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _itemStyleCache: ItemStyleCache;\n\n    // TODO This memoized getter doesn't make much sense.\n    // If all that's really needed is for the impl to be able to reset the cache,\n    // Then we could expose a better API for that.\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => {\n      this._itemStyleCache = {};\n\n      return this._itemStyleCache;\n    });\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _renderItems() {\n      const {\n        children,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        useIsScrolling,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n      return items;\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          // eslint-disable-next-line default-case\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n\n    // Intentionally placed after all other instance properties have been initialized,\n    // So that DynamicSizeList can override the render behavior.\n    _instanceProps: any = initInstanceProps(this.props, this);\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport { cloneElement, Component } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport type { Direction, Layout } from './createListComponent';\nimport type { HandleNewMeasurements } from './DynamicSizeList';\n\nclass DOMRectReadOnly {\n  +x: number;\n  +y: number;\n  +width: number;\n  +height: number;\n  +top: number;\n  +right: number;\n  +bottom: number;\n  +left: number;\n}\n\nclass ResizeObserverEntry {\n  +target: HTMLElement;\n  +contentRect: DOMRectReadOnly;\n}\n\ntype Entries = $ReadOnlyArray<ResizeObserverEntry>;\n\ntype ResizeObserverCallback = {\n  // eslint-disable-next-line no-use-before-define\n  (entries: Entries, observer: ResizeObserver): void,\n};\n\ndeclare class ResizeObserver {\n  constructor(ResizeObserverCallback): ResizeObserver;\n  observe(target: HTMLElement): void;\n  unobserve(target: HTMLElement): void;\n  disconnect(): void;\n}\n\ntype ItemMeasurerProps = {|\n  direction: Direction,\n  layout: Layout,\n  handleNewMeasurements: HandleNewMeasurements,\n  index: number,\n  item: React$Element<any>,\n  size: number,\n|};\n\nlet findDOMNodeWarningsSet = ((null: any): Set<any>);\nif (process.env.NODE_ENV !== 'production') {\n  findDOMNodeWarningsSet = new Set();\n}\n\nexport default class ItemMeasurer extends Component<ItemMeasurerProps, void> {\n  _didProvideValidRef: boolean = false;\n  _node: HTMLElement | null = null;\n  _resizeObserver: ResizeObserver | null = null;\n\n  componentDidMount() {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!this._didProvideValidRef) {\n        const { item } = this.props;\n\n        const displayName =\n          item && item.type\n            ? item.type.displayName || item.type.name || '(unknown)'\n            : '(unknown)';\n\n        if (!findDOMNodeWarningsSet.has(displayName)) {\n          findDOMNodeWarningsSet.add(displayName);\n\n          console.warn(\n            'DynamicSizeList item renderers should attach a ref to the topmost HTMLElement they render. ' +\n              `The item renderer \"${displayName}\" did not attach a ref to a valid HTMLElement. ` +\n              'findDOMNode() will be used as a fallback, but is slower and more error prone than using a ref.\\n\\n' +\n              'Learn more about ref forwarding: ' +\n              'https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components'\n          );\n        }\n      }\n    }\n\n    // Force sync measure for the initial mount.\n    // This is necessary to support the DynamicSizeList layout logic.\n    this._measureItem(true, true);\n\n    if (typeof ResizeObserver !== 'undefined') {\n      // Watch for resizes due to changed content,\n      // Or changes in the size of the parent container.\n      this._resizeObserver = new ResizeObserver(this._onResize);\n      if (this._node !== null) {\n        this._resizeObserver.observe(this._node);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._resizeObserver !== null) {\n      this._resizeObserver.disconnect();\n      this._resizeObserver = null;\n    }\n  }\n\n  render() {\n    return cloneElement(this.props.item, {\n      ref: this._refSetter,\n    });\n  }\n\n  _measureItem = (isCommitPhase: boolean, isMount: boolean) => {\n    const {\n      direction,\n      layout,\n      handleNewMeasurements,\n      index,\n      size: oldSize,\n    } = this.props;\n\n    const node = this._node;\n\n    if (\n      node &&\n      node.ownerDocument &&\n      node.ownerDocument.defaultView &&\n      node instanceof node.ownerDocument.defaultView.HTMLElement\n    ) {\n      const newSize =\n        direction === 'horizontal' || layout === 'horizontal'\n          ? Math.ceil(node.offsetWidth)\n          : Math.ceil(node.offsetHeight);\n\n      if (oldSize !== newSize || isMount) {\n        handleNewMeasurements(index, newSize, isCommitPhase);\n      }\n    }\n  };\n\n  _refSetter = (ref: any) => {\n    if (this._resizeObserver !== null && this._node !== null) {\n      this._resizeObserver.unobserve(this._node);\n    }\n\n    if (ref instanceof HTMLElement) {\n      this._didProvideValidRef = true;\n      this._node = ref;\n    } else if (ref) {\n      this._node = ((findDOMNode(ref): any): HTMLElement);\n    } else {\n      this._node = null;\n    }\n\n    if (this._resizeObserver !== null && this._node !== null) {\n      this._resizeObserver.observe(this._node);\n    }\n  };\n\n  _onResize = () => {\n    this._measureItem(false, false);\n  };\n}\n","// @flow\n\nimport { createElement } from 'react';\n\nimport createListComponent, { defaultItemKey } from './createListComponent';\nimport ItemMeasurer from './ItemMeasurer';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype DynanmicProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\nexport type HandleNewMeasurements = (\n  index: number,\n  newSize: number,\n  isFirstMeasureAfterMounting: boolean\n) => void;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  estimatedItemSize: number,\n  instance: any,\n  itemOffsetMap: { [index: number]: number },\n  itemSizeMap: { [index: number]: number },\n  lastMeasuredIndex: number,\n  lastPositionedIndex: number,\n  totalMeasuredSize: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const {\n    estimatedItemSize,\n    instance,\n    itemOffsetMap,\n    itemSizeMap,\n    lastMeasuredIndex,\n    lastPositionedIndex,\n  } = instanceProps;\n\n  // If the specified item has not yet been measured,\n  // Just return an estimated size for now.\n  if (index > lastMeasuredIndex) {\n    return {\n      offset: 0,\n      size: estimatedItemSize,\n    };\n  }\n\n  // Lazily update positions if they are stale.\n  if (index > lastPositionedIndex) {\n    if (lastPositionedIndex < 0) {\n      itemOffsetMap[0] = 0;\n    }\n\n    for (let i = Math.max(1, lastPositionedIndex + 1); i <= index; i++) {\n      const prevOffset = itemOffsetMap[i - 1];\n\n      // In some browsers (e.g. Firefox) fast scrolling may skip rows.\n      // In this case, our assumptions about last measured indices may be incorrect.\n      // Handle this edge case to prevent NaN values from breaking styles.\n      // Slow scrolling back over these skipped rows will adjust their sizes.\n      const prevSize = itemSizeMap[i - 1] || 0;\n\n      itemOffsetMap[i] = prevOffset + prevSize;\n\n      // Reset cached style to clear stale position.\n      delete instance._itemStyleCache[i];\n    }\n\n    instanceProps.lastPositionedIndex = index;\n  }\n\n  let offset = itemOffsetMap[index];\n  let size = itemSizeMap[index];\n\n  return { offset, size };\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  {\n    itemSizeMap,\n    estimatedItemSize,\n    lastMeasuredIndex,\n    totalMeasuredSize,\n  }: InstanceProps\n) =>\n  totalMeasuredSize + (itemCount - lastMeasuredIndex - 1) * estimatedItemSize;\n\nconst DynamicSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): ?number => {\n    // Do not hard-code item dimensions.\n    // We don't know them initially.\n    // Even once we do, changes in item content or list size should reflow.\n    return undefined;\n  },\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, layout, height, width } = props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { lastMeasuredIndex } = instanceProps;\n      if (index > lastMeasuredIndex) {\n        console.warn(\n          `DynamicSizeList does not support scrolling to items that yave not yet measured. ` +\n            `scrollToItem() was called with index ${index} but the last measured item was ${lastMeasuredIndex}.`\n        );\n      }\n    }\n\n    const size = (((direction === 'horizontal' || layout === 'horizontal'\n      ? width\n      : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.min(estimatedTotalSize - size, itemMetadata.offset);\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset - minOffset < maxOffset - scrollOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { lastMeasuredIndex, totalMeasuredSize } = instanceProps;\n\n    // If we've already positioned and measured past this point,\n    // Use a binary search to find the closets cell.\n    if (offset <= totalMeasuredSize) {\n      return findNearestItemBinarySearch(\n        props,\n        instanceProps,\n        lastMeasuredIndex,\n        0,\n        offset\n      );\n    }\n\n    // Otherwise render a new batch of items starting from where we left off.\n    return lastMeasuredIndex + 1;\n  },\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, layout, height, itemCount, width } = props;\n\n    const size = (((direction === 'horizontal' || layout === 'horizontal'\n      ? width\n      : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): DynanmicProps);\n\n    const instanceProps = {\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      instance,\n      itemOffsetMap: {},\n      itemSizeMap: {},\n      lastMeasuredIndex: -1,\n      lastPositionedIndex: -1,\n      totalMeasuredSize: 0,\n    };\n\n    let debounceForceUpdateID = null;\n    const debounceForceUpdate = () => {\n      if (debounceForceUpdateID === null) {\n        debounceForceUpdateID = setTimeout(() => {\n          debounceForceUpdateID = null;\n          instance.forceUpdate();\n        }, 1);\n      }\n    };\n\n    // This method is called before unmounting.\n    instance._unmountHook = () => {\n      if (debounceForceUpdateID !== null) {\n        clearTimeout(debounceForceUpdateID);\n        debounceForceUpdateID = null;\n      }\n    };\n\n    let hasNewMeasurements: boolean = false;\n    let sizeDeltaTotal = 0;\n\n    // This method is called after mount and update.\n    instance._commitHook = () => {\n      if (hasNewMeasurements) {\n        hasNewMeasurements = false;\n\n        // Edge case where cell sizes changed, but cancelled each other out.\n        // We still need to re-render in this case,\n        // Even though we don't need to adjust scroll offset.\n        if (sizeDeltaTotal === 0) {\n          instance.forceUpdate();\n          return;\n        }\n\n        let shouldForceUpdate;\n\n        // In the setState commit hook, we'll decrement sizeDeltaTotal.\n        // In case the state update is processed synchronously,\n        // And triggers additional size updates itself,\n        // We should only drecement by the amount we updated state for originally.\n        const sizeDeltaForStateUpdate = sizeDeltaTotal;\n\n        // If the user is scrolling up, we need to adjust the scroll offset,\n        // To prevent items from \"jumping\" as items before them have been resized.\n        instance.setState(\n          prevState => {\n            if (\n              prevState.scrollDirection === 'backward' &&\n              !prevState.scrollUpdateWasRequested\n            ) {\n              // TRICKY\n              // If item(s) have changed size since they were last displayed, content will appear to jump.\n              // To avoid this, we need to make small adjustments as a user scrolls to preserve apparent position.\n              // This also ensures that the first item eventually aligns with scroll offset 0.\n              return {\n                scrollOffset: prevState.scrollOffset + sizeDeltaForStateUpdate,\n              };\n            } else {\n              // There's no state to update,\n              // But we still want to re-render in this case.\n              shouldForceUpdate = true;\n\n              return null;\n            }\n          },\n          () => {\n            if (shouldForceUpdate) {\n              instance.forceUpdate();\n            } else {\n              const { scrollOffset } = instance.state;\n              const { direction, layout } = instance.props;\n\n              // Adjusting scroll offset directly interrupts smooth scrolling for some browsers (e.g. Firefox).\n              // The relative scrollBy() method doesn't interrupt (or at least it won't as of Firefox v65).\n              // Other browsers (e.g. Chrome, Safari) seem to handle both adjustments equally well.\n              // See https://bugzilla.mozilla.org/show_bug.cgi?id=1502059\n              const element = ((instance._outerRef: any): HTMLDivElement);\n              // $FlowFixMe Property scrollBy is missing in HTMLDivElement\n              if (typeof element.scrollBy === 'function') {\n                element.scrollBy(\n                  direction === 'horizontal' || layout === 'horizontal'\n                    ? sizeDeltaForStateUpdate\n                    : 0,\n                  direction === 'horizontal' || layout === 'horizontal'\n                    ? 0\n                    : sizeDeltaForStateUpdate\n                );\n              } else if (\n                direction === 'horizontal' ||\n                layout === 'horizontal'\n              ) {\n                element.scrollLeft = scrollOffset;\n              } else {\n                element.scrollTop = scrollOffset;\n              }\n            }\n\n            sizeDeltaTotal -= sizeDeltaForStateUpdate;\n          }\n        );\n      }\n    };\n\n    // This function may be called out of order!\n    // It is not safe to reposition items here.\n    // Be careful when comparing index and lastMeasuredIndex.\n    const handleNewMeasurements: HandleNewMeasurements = (\n      index: number,\n      newSize: number,\n      isFirstMeasureAfterMounting: boolean\n    ) => {\n      const {\n        itemSizeMap,\n        lastMeasuredIndex,\n        lastPositionedIndex,\n      } = instanceProps;\n\n      // In some browsers (e.g. Firefox) fast scrolling may skip rows.\n      // In this case, our assumptions about last measured indices may be incorrect.\n      // Handle this edge case to prevent NaN values from breaking styles.\n      // Slow scrolling back over these skipped rows will adjust their sizes.\n      const oldSize = itemSizeMap[index] || 0;\n\n      // Mark offsets after this as stale so that getItemMetadata() will lazily recalculate it.\n      if (index < lastPositionedIndex) {\n        instanceProps.lastPositionedIndex = index;\n      }\n\n      if (index <= lastMeasuredIndex) {\n        if (oldSize === newSize) {\n          return;\n        }\n\n        // Adjust total size estimate by the delta in size.\n        instanceProps.totalMeasuredSize += newSize - oldSize;\n\n        // Record the size delta here in case the user is scrolling up.\n        // In that event, we need to adjust the scroll offset by thie amount,\n        // To prevent items from \"jumping\" as items before them are resized.\n        // We only do this for items that are newly measured (after mounting).\n        // Ones that change size later do not need to affect scroll offset.\n        if (isFirstMeasureAfterMounting) {\n          sizeDeltaTotal += newSize - oldSize;\n        }\n      } else {\n        instanceProps.lastMeasuredIndex = index;\n        instanceProps.totalMeasuredSize += newSize;\n      }\n\n      itemSizeMap[index] = newSize;\n\n      // Even though the size has changed, we don't need to reset the cached style,\n      // Because dynamic list items don't have constrained sizes.\n      // This enables them to resize when their content (or container size) changes.\n      // It also lets us avoid an unnecessary render in this case.\n\n      if (isFirstMeasureAfterMounting) {\n        hasNewMeasurements = true;\n      } else {\n        debounceForceUpdate();\n      }\n    };\n    instance._handleNewMeasurements = handleNewMeasurements;\n\n    // Override the item-rendering process to wrap items with ItemMeasurer.\n    // This keep the external API simpler.\n    instance._renderItems = () => {\n      const {\n        children,\n        direction,\n        layout,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        useIsScrolling,\n      } = instance.props;\n      const { isScrolling } = instance.state;\n\n      const [startIndex, stopIndex] = instance._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          const { size } = getItemMetadata(\n            instance.props,\n            index,\n            instanceProps\n          );\n\n          // It's important to read style after fetching item metadata.\n          // getItemMetadata() will clear stale styles.\n          const style = instance._getItemStyle(index);\n\n          const item = createElement(children, {\n            data: itemData,\n            index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style,\n          });\n\n          // Always wrap children in a ItemMeasurer to detect changes in size.\n          items.push(\n            createElement(ItemMeasurer, {\n              direction,\n              layout,\n              handleNewMeasurements,\n              index,\n              item,\n              key: itemKey(index, itemData),\n              size,\n            })\n          );\n        }\n      }\n      return items;\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (itemSize !== undefined) {\n        throw Error('An unexpected \"itemSize\" prop has been provided.');\n      }\n    }\n  },\n});\n\nexport default DynamicSizeList;\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        columnCount,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        outerTagName,\n        rowCount,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      const items = [];\n      if (columnCount > 0 && rowCount) {\n        for (\n          let rowIndex = rowStartIndex;\n          rowIndex <= rowStopIndex;\n          rowIndex++\n        ) {\n          for (\n            let columnIndex = columnStartIndex;\n            columnIndex <= columnStopIndex;\n            columnIndex++\n          ) {\n            items.push(\n              createElement(children, {\n                columnIndex,\n                data: itemData,\n                isScrolling: useIsScrolling ? isScrolling : undefined,\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\n                rowIndex,\n                style: this._getItemStyle(rowIndex, columnIndex),\n              })\n            );\n          }\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll: this._onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: estimatedTotalHeight,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: estimatedTotalWidth,\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          [direction === 'rtl' ? 'right' : 'left']: getColumnOffset(\n            this.props,\n            columnIndex,\n            this._instanceProps\n          ),\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          // eslint-disable-next-line default-case\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createGridComponent from './createGridComponent';\n\nimport type { Props, ScrollToAlign } from './createGridComponent';\n\nconst FixedSizeGrid = createGridComponent({\n  getColumnOffset: ({ columnWidth }: Props<any>, index: number): number =>\n    index * ((columnWidth: any): number),\n\n  getColumnWidth: ({ columnWidth }: Props<any>, index: number): number =>\n    ((columnWidth: any): number),\n\n  getRowOffset: ({ rowHeight }: Props<any>, index: number): number =>\n    index * ((rowHeight: any): number),\n\n  getRowHeight: ({ rowHeight }: Props<any>, index: number): number =>\n    ((rowHeight: any): number),\n\n  getEstimatedTotalHeight: ({ rowCount, rowHeight }: Props<any>) =>\n    ((rowHeight: any): number) * rowCount,\n\n  getEstimatedTotalWidth: ({ columnCount, columnWidth }: Props<any>) =>\n    ((columnWidth: any): number) * columnCount,\n\n  getOffsetForColumnAndAlignment: (\n    { columnCount, columnWidth, width }: Props<any>,\n    columnIndex: number,\n    align: ScrollToAlign,\n    scrollLeft: number,\n    instanceProps: typeof undefined,\n    scrollbarSize: number\n  ): number => {\n    const lastColumnOffset = Math.max(\n      0,\n      columnCount * ((columnWidth: any): number) - width\n    );\n    const maxOffset = Math.min(\n      lastColumnOffset,\n      columnIndex * ((columnWidth: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      columnIndex * ((columnWidth: any): number) -\n        width +\n        scrollbarSize +\n        ((columnWidth: any): number)\n    );\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getOffsetForRowAndAlignment: (\n    { rowHeight, height, rowCount }: Props<any>,\n    rowIndex: number,\n    align: ScrollToAlign,\n    scrollTop: number,\n    instanceProps: typeof undefined,\n    scrollbarSize: number\n  ): number => {\n    const lastRowOffset = Math.max(\n      0,\n      rowCount * ((rowHeight: any): number) - height\n    );\n    const maxOffset = Math.min(\n      lastRowOffset,\n      rowIndex * ((rowHeight: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      rowIndex * ((rowHeight: any): number) -\n        height +\n        scrollbarSize +\n        ((rowHeight: any): number)\n    );\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getColumnStartIndexForOffset: (\n    { columnWidth, columnCount }: Props<any>,\n    scrollLeft: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(\n        columnCount - 1,\n        Math.floor(scrollLeft / ((columnWidth: any): number))\n      )\n    ),\n\n  getColumnStopIndexForStartIndex: (\n    { columnWidth, columnCount, width }: Props<any>,\n    startIndex: number,\n    scrollLeft: number\n  ): number => {\n    const left = startIndex * ((columnWidth: any): number);\n    const numVisibleColumns = Math.ceil(\n      (width + scrollLeft - left) / ((columnWidth: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        columnCount - 1,\n        startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  getRowStartIndexForOffset: (\n    { rowHeight, rowCount }: Props<any>,\n    scrollTop: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(rowCount - 1, Math.floor(scrollTop / ((rowHeight: any): number)))\n    ),\n\n  getRowStopIndexForStartIndex: (\n    { rowHeight, rowCount, height }: Props<any>,\n    startIndex: number,\n    scrollTop: number\n  ): number => {\n    const top = startIndex * ((rowHeight: any): number);\n    const numVisibleRows = Math.ceil(\n      (height + scrollTop - top) / ((rowHeight: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        rowCount - 1,\n        startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error(\n          'An invalid \"columnWidth\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${\n              columnWidth === null ? 'null' : typeof columnWidth\n            }\" was specified.`\n        );\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error(\n          'An invalid \"rowHeight\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeGrid;\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst FixedSizeList = createListComponent({\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\n    index * ((itemSize: any): number),\n\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\n    ((itemSize: any): number),\n\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\n    ((itemSize: any): number) * itemCount,\n\n  getOffsetForIndexAndAlignment: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const lastItemOffset = Math.max(\n      0,\n      itemCount * ((itemSize: any): number) - size\n    );\n    const maxOffset = Math.min(\n      lastItemOffset,\n      index * ((itemSize: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center': {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    { itemCount, itemSize }: Props<any>,\n    offset: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\n    ),\n\n  getStopIndexForStartIndex: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    startIndex: number,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const offset = startIndex * ((itemSize: any): number);\n    const size = (((isHorizontal ? width : height): any): number);\n    const numVisibleItems = Math.ceil(\n      (size + scrollOffset - offset) / ((itemSize: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        itemCount - 1,\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeList;\n","// @flow\n\nimport createGridComponent from './createGridComponent';\n\nimport type { Props, ScrollToAlign } from './createGridComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedColumnWidth: number,\n  estimatedRowHeight: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\ntype ItemType = 'column' | 'row';\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype ItemMetadataMap = { [index: number]: ItemMetadata };\ntype InstanceProps = {|\n  columnMetadataMap: ItemMetadataMap,\n  estimatedColumnWidth: number,\n  estimatedRowHeight: number,\n  lastMeasuredColumnIndex: number,\n  lastMeasuredRowIndex: number,\n  rowMetadataMap: ItemMetadataMap,\n|};\n\nconst getEstimatedTotalHeight = (\n  { rowCount }: Props<any>,\n  { rowMetadataMap, estimatedRowHeight, lastMeasuredRowIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredRows = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    const itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nconst getEstimatedTotalWidth = (\n  { columnCount }: Props<any>,\n  {\n    columnMetadataMap,\n    estimatedColumnWidth,\n    lastMeasuredColumnIndex,\n  }: InstanceProps\n) => {\n  let totalSizeOfMeasuredRows = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    const itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nconst getItemMetadata = (\n  itemType: ItemType,\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  let itemMetadataMap, itemSize, lastMeasuredIndex;\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = ((props.columnWidth: any): itemSizeGetter);\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = ((props.rowHeight: any): itemSizeGetter);\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = itemSize(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  itemType: ItemType,\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  let itemMetadataMap, lastMeasuredIndex;\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      itemType,\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      itemType,\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  itemType: ItemType,\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(\n      itemType,\n      props,\n      middle,\n      instanceProps\n    ).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  itemType: ItemType,\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(itemType, props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    itemType,\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getOffsetForIndexAndAlignment = (\n  itemType: ItemType,\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: InstanceProps,\n  scrollbarSize: number\n): number => {\n  const size = itemType === 'column' ? props.width : props.height;\n  const itemMetadata = getItemMetadata(itemType, props, index, instanceProps);\n\n  // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n  const estimatedTotalSize =\n    itemType === 'column'\n      ? getEstimatedTotalWidth(props, instanceProps)\n      : getEstimatedTotalHeight(props, instanceProps);\n\n  const maxOffset = Math.max(\n    0,\n    Math.min(estimatedTotalSize - size, itemMetadata.offset)\n  );\n  const minOffset = Math.max(\n    0,\n    itemMetadata.offset - size + scrollbarSize + itemMetadata.size\n  );\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n    case 'end':\n      return minOffset;\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n  }\n};\n\nconst VariableSizeGrid = createGridComponent({\n  getColumnOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata('column', props, index, instanceProps).offset,\n\n  getColumnStartIndexForOffset: (\n    props: Props<any>,\n    scrollLeft: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem('column', props, instanceProps, scrollLeft),\n\n  getColumnStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollLeft: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { columnCount, width } = props;\n\n    const itemMetadata = getItemMetadata(\n      'column',\n      props,\n      startIndex,\n      instanceProps\n    );\n    const maxOffset = scrollLeft + width;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  getColumnWidth: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.columnMetadataMap[index].size,\n\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n\n  getOffsetForColumnAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps,\n    scrollbarSize: number\n  ): number =>\n    getOffsetForIndexAndAlignment(\n      'column',\n      props,\n      index,\n      align,\n      scrollOffset,\n      instanceProps,\n      scrollbarSize\n    ),\n\n  getOffsetForRowAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps,\n    scrollbarSize: number\n  ): number =>\n    getOffsetForIndexAndAlignment(\n      'row',\n      props,\n      index,\n      align,\n      scrollOffset,\n      instanceProps,\n      scrollbarSize\n    ),\n\n  getRowOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata('row', props, index, instanceProps).offset,\n\n  getRowHeight: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.rowMetadataMap[index].size,\n\n  getRowStartIndexForOffset: (\n    props: Props<any>,\n    scrollTop: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem('row', props, instanceProps, scrollTop),\n\n  getRowStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollTop: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { rowCount, height } = props;\n\n    const itemMetadata = getItemMetadata(\n      'row',\n      props,\n      startIndex,\n      instanceProps\n    );\n    const maxOffset = scrollTop + height;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const {\n      estimatedColumnWidth,\n      estimatedRowHeight,\n    } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {},\n    };\n\n    instance.resetAfterColumnIndex = (\n      columnIndex: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instance.resetAfterIndices({ columnIndex, shouldForceUpdate });\n    };\n\n    instance.resetAfterRowIndex = (\n      rowIndex: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instance.resetAfterIndices({ rowIndex, shouldForceUpdate });\n    };\n\n    instance.resetAfterIndices = ({\n      columnIndex,\n      rowIndex,\n      shouldForceUpdate = true,\n    }: {\n      columnIndex?: number,\n      rowIndex?: number,\n      shouldForceUpdate: boolean,\n    }) => {\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(\n          instanceProps.lastMeasuredColumnIndex,\n          columnIndex - 1\n        );\n      }\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(\n          instanceProps.lastMeasuredRowIndex,\n          rowIndex - 1\n        );\n      }\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error(\n          'An invalid \"columnWidth\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${\n              columnWidth === null ? 'null' : typeof columnWidth\n            }\" was specified.`\n        );\n      } else if (typeof rowHeight !== 'function') {\n        throw Error(\n          'An invalid \"rowHeight\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeGrid;\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, itemCount, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","// @flow\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nexport default function shallowDiffers(prev: Object, next: Object): boolean {\n  for (let attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n  for (let attribute in next) {\n    if (prev[attribute] !== next[attribute]) {\n      return true;\n    }\n  }\n  return false;\n}\n","// @flow\n\nimport shallowDiffers from './shallowDiffers';\n\n// Custom comparison function for React.memo().\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\nexport default function areEqual(\n  prevProps: Object,\n  nextProps: Object\n): boolean {\n  const { style: prevStyle, ...prevRest } = prevProps;\n  const { style: nextStyle, ...nextRest } = nextProps;\n\n  return (\n    !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest)\n  );\n}\n","// @flow\n\nimport areEqual from './areEqual';\nimport shallowDiffers from './shallowDiffers';\n\n// Custom shouldComponentUpdate for class components.\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\nexport default function shouldComponentUpdate(\n  nextProps: Object,\n  nextState: Object\n): boolean {\n  return (\n    !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState)\n  );\n}\n"],"names":["hasNativePerformanceNow","performance","now","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","requestTimeout","callback","delay","start","tick","call","requestAnimationFrame","size","getScrollbarSize","recalculate","div","document","createElement","style","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","IS_SCROLLING_DEBOUNCE_INTERVAL","defaultItemKey","index","data","devWarningsDirection","devWarningsTagName","process","env","NODE_ENV","window","WeakSet","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","props","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","state","instance","isScrolling","scrollDirection","scrollOffset","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","memoizeOne","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","itemSize","layout","itemStyleCache","_getItemStyleCache","hasOwnProperty","offset","isHorizontal","position","top","_itemStyleCache","_","__","___","_onScrollHorizontal","event","currentTarget","scrollWidth","setState","prevState","Math","max","min","_resetIsScrollingDebounced","_onScrollVertical","clientHeight","scrollHeight","scrollTop","_outerRefSetter","ref","outerRef","current","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps","scrollTo","scrollToItem","align","itemCount","componentDidMount","_callPropsCallbacks","_commitHook","componentDidUpdate","componentWillUnmount","_unmountHook","render","className","innerRef","innerElementType","innerTagName","outerElementType","outerTagName","items","_renderItems","estimatedTotalSize","WebkitOverflowScrolling","willChange","children","pointerEvents","undefined","_getRangeToRender","overscanCount","startIndex","stopIndex","overscanBackward","overscanForward","itemData","itemKey","useIsScrolling","push","key","PureComponent","defaultProps","has","add","console","warn","Error","findDOMNodeWarningsSet","Set","ItemMeasurer","_didProvideValidRef","_node","_resizeObserver","_measureItem","isCommitPhase","isMount","handleNewMeasurements","oldSize","node","ownerDocument","defaultView","HTMLElement","newSize","ceil","offsetHeight","_refSetter","unobserve","findDOMNode","observe","_onResize","item","displayName","type","name","ResizeObserver","disconnect","cloneElement","Component","DEFAULT_ESTIMATED_ITEM_SIZE","getItemMetadata","instanceProps","estimatedItemSize","itemOffsetMap","itemSizeMap","lastMeasuredIndex","lastPositionedIndex","i","prevOffset","prevSize","findNearestItemBinarySearch","high","low","middle","floor","currentOffset","totalMeasuredSize","DynamicSizeList","itemMetadata","maxOffset","minOffset","round","debounceForceUpdateID","debounceForceUpdate","setTimeout","forceUpdate","clearTimeout","hasNewMeasurements","sizeDeltaTotal","shouldForceUpdate","sizeDeltaForStateUpdate","element","scrollBy","isFirstMeasureAfterMounting","_handleNewMeasurements","columnIndex","rowIndex","devWarningsOverscanCount","devWarningsOverscanRowsColumnsCount","createGridComponent","getColumnOffset","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getColumnWidth","getEstimatedTotalHeight","getEstimatedTotalWidth","getOffsetForColumnAndAlignment","getOffsetForRowAndAlignment","getRowHeight","getRowOffset","getRowStartIndexForOffset","getRowStopIndexForStartIndex","horizontalScrollDirection","initialScrollLeft","initialScrollTop","verticalScrollDirection","overscanColumnStartIndex","overscanColumnStopIndex","overscanRowStartIndex","overscanRowStopIndex","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","columnWidth","rowHeight","_onScroll","calculatedScrollLeft","calculatedScrollTop","columnCount","rowCount","scrollbarSize","estimatedTotalHeight","estimatedTotalWidth","horizontalScrollbarSize","verticalScrollbarSize","_getHorizontalRangeToRender","columnStartIndex","columnStopIndex","_getVerticalRangeToRender","rowStartIndex","rowStopIndex","overscanColumnCount","overscanColumnsCount","overscanCountResolved","overscanRowCount","overscanRowsCount","FixedSizeGrid","lastColumnOffset","middleOffset","lastRowOffset","left","numVisibleColumns","numVisibleRows","FixedSizeList","lastItemOffset","numVisibleItems","rowMetadataMap","estimatedRowHeight","lastMeasuredRowIndex","totalSizeOfMeasuredRows","numUnmeasuredItems","totalSizeOfUnmeasuredItems","columnMetadataMap","estimatedColumnWidth","lastMeasuredColumnIndex","itemType","itemMetadataMap","findNearestItem","lastMeasuredItemOffset","findNearestItemExponentialSearch","interval","VariableSizeGrid","resetAfterColumnIndex","resetAfterIndices","resetAfterRowIndex","totalSizeOfMeasuredItems","VariableSizeList","resetAfterIndex","shallowDiffers","prev","next","attribute","areEqual","prevProps","prevStyle","prevRest","nextStyle","nextRest","shouldComponentUpdate","nextState"],"mappings":"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"}